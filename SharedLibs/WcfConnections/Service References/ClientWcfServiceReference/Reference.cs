//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfConnections.ClientWcfServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientWcfServiceReference.IClientWcfService")]
    public interface IClientWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmClientRegistered", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmClientRegisteredResponse")]
        void ConfirmClientRegistered(Dto.ClientRegisteredDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmDelivery", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmDeliveryResponse")]
        void ConfirmDelivery(Dto.RtuCommandDeliveredDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmRtuConnectionChecked", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmRtuConnectionCheckedResponse")]
        void ConfirmRtuConnectionChecked(Dto.RtuConnectionCheckedDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmRtuInitialized", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmRtuInitializedResponse")]
        void ConfirmRtuInitialized(Dto.RtuInitializedDto rtu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringStarted", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringStartedResponse")]
        void ConfirmMonitoringStarted(Dto.MonitoringStartedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringStopped", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringStoppedResponse")]
        void ConfirmMonitoringStopped(Dto.MonitoringStoppedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringSettingsApplied", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringSettingsAppliedResponse")]
        void ConfirmMonitoringSettingsApplied(Dto.MonitoringSettingsAppliedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmBaseRefAssigned", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmBaseRefAssignedResponse")]
        void ConfirmBaseRefAssigned(Dto.BaseRefAssignedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ProcessRtuCurrentMonitoringStep", ReplyAction="http://tempuri.org/IClientWcfService/ProcessRtuCurrentMonitoringStepResponse")]
        void ProcessRtuCurrentMonitoringStep(Dto.KnowRtuCurrentMonitoringStepDto dto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientWcfServiceChannel : WcfConnections.ClientWcfServiceReference.IClientWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientWcfServiceClient : System.ServiceModel.ClientBase<WcfConnections.ClientWcfServiceReference.IClientWcfService>, WcfConnections.ClientWcfServiceReference.IClientWcfService {
        
        public ClientWcfServiceClient() {
        }
        
        public ClientWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ConfirmClientRegistered(Dto.ClientRegisteredDto dto) {
            base.Channel.ConfirmClientRegistered(dto);
        }
        
        public void ConfirmDelivery(Dto.RtuCommandDeliveredDto dto) {
            base.Channel.ConfirmDelivery(dto);
        }
        
        public void ConfirmRtuConnectionChecked(Dto.RtuConnectionCheckedDto dto) {
            base.Channel.ConfirmRtuConnectionChecked(dto);
        }
        
        public void ConfirmRtuInitialized(Dto.RtuInitializedDto rtu) {
            base.Channel.ConfirmRtuInitialized(rtu);
        }
        
        public void ConfirmMonitoringStarted(Dto.MonitoringStartedDto confirm) {
            base.Channel.ConfirmMonitoringStarted(confirm);
        }
        
        public void ConfirmMonitoringStopped(Dto.MonitoringStoppedDto confirm) {
            base.Channel.ConfirmMonitoringStopped(confirm);
        }
        
        public void ConfirmMonitoringSettingsApplied(Dto.MonitoringSettingsAppliedDto confirm) {
            base.Channel.ConfirmMonitoringSettingsApplied(confirm);
        }
        
        public void ConfirmBaseRefAssigned(Dto.BaseRefAssignedDto confirm) {
            base.Channel.ConfirmBaseRefAssigned(confirm);
        }
        
        public void ProcessRtuCurrentMonitoringStep(Dto.KnowRtuCurrentMonitoringStepDto dto) {
            base.Channel.ProcessRtuCurrentMonitoringStep(dto);
        }
    }
}
