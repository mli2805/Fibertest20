- если отключить трассу при выкинутых FreePorts - не перерисовывает дерево

- сообщения от непрописанных трасс показывать? (у меня после чистки БД возникли)

- Измерение Reflect - если есть прямая связь клиент -рту 
- Измерение Client -все через сервер - запрос допустимых параметров  - установка их - измерние - получение рефлектограммы - показ ее в рефлекте
- Точное измерение вне очереди - все команды через сервер - остановить мониторинг рту (если идет) - 
		померять порт с точной базовой - прислать измерение по стандартным каналам - 
		принудительно открыть окно TraceState в клиенте - вернуть мониторинг (если был)


 - Посылка команды на сервер иногда притормаживает - и решив что не кликнул я нажимаю повторно - получается "задвоенная команда" 
 (например присоединения трассы к порту) - при приходе двух событий прога кидает эксепшен (или задваивает обработку)
	толи все команды проверить и отключать кнопку ОК пока незавершена обработка
	но лучше чтобы C2DWcfManager не позволял подать вторую команду пока первая не обработана




	1. Equipment хранить прямо в узлах
	2. Для трасс хранить список волокон
	3. blahblahViewModel должна использовать ReadModel а не GraphReadModel, как и все остальные формы
	6.


Результат мониторинга приходит на сервер

-- есть --

 _measurementFactory.Create(monitoringResultDto) - new Measurement()
 SaveMonitoringResultAsync сохраняет в 2 таблицы шапку и сорку и возвращает - new MeasurementWithSor()
  который отсылается клиентам
	на это реагируют таблицы оптических событий и формы рту, трассы, граф

 и если это измерение = ивент PlaceOpticalEventIntoEventSourcing - GetAccidents(sorData, true) -
 кладется команда new ShowMonitoringResult()
  и клиенты вытягивают событие  MonitoringResultShown e
	опять кто-то реагирует, кто-то нет

  -- надо --

  сохраняем сорку
  независимо от того ивент или нет парсим сорку  - GetAccidents(sorData, true)
  формируем команду new ShowMonitoringResult() у которой внутри и поля Measurement() и кладем ее в ивентсоурсинг
  и клиенты вытягивают событие  MonitoringResultShown e
   и теперь все таблицы и формы и граф реагируют на это событие


Аналогично сетевые события, события бопов хранить в ивентсоурсинге
Базовые хранить в ивентсоурсинге, кроме самой сорки