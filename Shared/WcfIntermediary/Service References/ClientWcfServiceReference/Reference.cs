//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfIntermediary.ClientWcfServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RtuConnectionCheckedDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class RtuConnectionCheckedDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPingSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRtuManagerAliveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RtuIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPingSuccessful {
            get {
                return this.IsPingSuccessfulField;
            }
            set {
                if ((this.IsPingSuccessfulField.Equals(value) != true)) {
                    this.IsPingSuccessfulField = value;
                    this.RaisePropertyChanged("IsPingSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRtuManagerAlive {
            get {
                return this.IsRtuManagerAliveField;
            }
            set {
                if ((this.IsRtuManagerAliveField.Equals(value) != true)) {
                    this.IsRtuManagerAliveField = value;
                    this.RaisePropertyChanged("IsRtuManagerAlive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RtuId {
            get {
                return this.RtuIdField;
            }
            set {
                if ((this.RtuIdField.Equals(value) != true)) {
                    this.RtuIdField = value;
                    this.RaisePropertyChanged("RtuId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RtuInitializedDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class RtuInitializedDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FullPortCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInitializedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnPortCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FullPortCount {
            get {
                return this.FullPortCountField;
            }
            set {
                if ((this.FullPortCountField.Equals(value) != true)) {
                    this.FullPortCountField = value;
                    this.RaisePropertyChanged("FullPortCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInitialized {
            get {
                return this.IsInitializedField;
            }
            set {
                if ((this.IsInitializedField.Equals(value) != true)) {
                    this.IsInitializedField = value;
                    this.RaisePropertyChanged("IsInitialized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnPortCount {
            get {
                return this.OwnPortCountField;
            }
            set {
                if ((this.OwnPortCountField.Equals(value) != true)) {
                    this.OwnPortCountField = value;
                    this.RaisePropertyChanged("OwnPortCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serial {
            get {
                return this.SerialField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialField, value) != true)) {
                    this.SerialField = value;
                    this.RaisePropertyChanged("Serial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitoringStartedDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class MonitoringStartedDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RtuIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RtuId {
            get {
                return this.RtuIdField;
            }
            set {
                if ((this.RtuIdField.Equals(value) != true)) {
                    this.RtuIdField = value;
                    this.RaisePropertyChanged("RtuId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitoringStoppedDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class MonitoringStoppedDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RtuIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RtuId {
            get {
                return this.RtuIdField;
            }
            set {
                if ((this.RtuIdField.Equals(value) != true)) {
                    this.RtuIdField = value;
                    this.RaisePropertyChanged("RtuId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitoringSettingsAppliedDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class MonitoringSettingsAppliedDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RtuIpAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RtuIpAddress {
            get {
                return this.RtuIpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RtuIpAddressField, value) != true)) {
                    this.RtuIpAddressField = value;
                    this.RaisePropertyChanged("RtuIpAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRefAssignedDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class BaseRefAssignedDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfIntermediary.ClientWcfServiceReference.OtauPortDto OtauPortDtoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RtuIpAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfIntermediary.ClientWcfServiceReference.OtauPortDto OtauPortDto {
            get {
                return this.OtauPortDtoField;
            }
            set {
                if ((object.ReferenceEquals(this.OtauPortDtoField, value) != true)) {
                    this.OtauPortDtoField = value;
                    this.RaisePropertyChanged("OtauPortDto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RtuIpAddress {
            get {
                return this.RtuIpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RtuIpAddressField, value) != true)) {
                    this.RtuIpAddressField = value;
                    this.RaisePropertyChanged("RtuIpAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OtauPortDto", Namespace="http://schemas.datacontract.org/2004/07/Dto")]
    [System.SerializableAttribute()]
    public partial class OtauPortDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpticalPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TcpPortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpticalPort {
            get {
                return this.OpticalPortField;
            }
            set {
                if ((this.OpticalPortField.Equals(value) != true)) {
                    this.OpticalPortField = value;
                    this.RaisePropertyChanged("OpticalPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TcpPort {
            get {
                return this.TcpPortField;
            }
            set {
                if ((this.TcpPortField.Equals(value) != true)) {
                    this.TcpPortField = value;
                    this.RaisePropertyChanged("TcpPort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientWcfServiceReference.IClientWcfService")]
    public interface IClientWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmRtuConnectionChecked", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmRtuConnectionCheckedResponse")]
        void ConfirmRtuConnectionChecked(WcfIntermediary.ClientWcfServiceReference.RtuConnectionCheckedDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmRtuConnectionChecked", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmRtuConnectionCheckedResponse")]
        System.Threading.Tasks.Task ConfirmRtuConnectionCheckedAsync(WcfIntermediary.ClientWcfServiceReference.RtuConnectionCheckedDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmRtuInitialized", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmRtuInitializedResponse")]
        void ConfirmRtuInitialized(WcfIntermediary.ClientWcfServiceReference.RtuInitializedDto rtu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmRtuInitialized", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmRtuInitializedResponse")]
        System.Threading.Tasks.Task ConfirmRtuInitializedAsync(WcfIntermediary.ClientWcfServiceReference.RtuInitializedDto rtu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringStarted", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringStartedResponse")]
        void ConfirmMonitoringStarted(WcfIntermediary.ClientWcfServiceReference.MonitoringStartedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringStarted", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringStartedResponse")]
        System.Threading.Tasks.Task ConfirmMonitoringStartedAsync(WcfIntermediary.ClientWcfServiceReference.MonitoringStartedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringStopped", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringStoppedResponse")]
        void ConfirmMonitoringStopped(WcfIntermediary.ClientWcfServiceReference.MonitoringStoppedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringStopped", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringStoppedResponse")]
        System.Threading.Tasks.Task ConfirmMonitoringStoppedAsync(WcfIntermediary.ClientWcfServiceReference.MonitoringStoppedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringSettingsApplied", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringSettingsAppliedResponse")]
        void ConfirmMonitoringSettingsApplied(WcfIntermediary.ClientWcfServiceReference.MonitoringSettingsAppliedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmMonitoringSettingsApplied", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmMonitoringSettingsAppliedResponse")]
        System.Threading.Tasks.Task ConfirmMonitoringSettingsAppliedAsync(WcfIntermediary.ClientWcfServiceReference.MonitoringSettingsAppliedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmBaseRefAssigned", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmBaseRefAssignedResponse")]
        void ConfirmBaseRefAssigned(WcfIntermediary.ClientWcfServiceReference.BaseRefAssignedDto confirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientWcfService/ConfirmBaseRefAssigned", ReplyAction="http://tempuri.org/IClientWcfService/ConfirmBaseRefAssignedResponse")]
        System.Threading.Tasks.Task ConfirmBaseRefAssignedAsync(WcfIntermediary.ClientWcfServiceReference.BaseRefAssignedDto confirm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientWcfServiceChannel : WcfIntermediary.ClientWcfServiceReference.IClientWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientWcfServiceClient : System.ServiceModel.ClientBase<WcfIntermediary.ClientWcfServiceReference.IClientWcfService>, WcfIntermediary.ClientWcfServiceReference.IClientWcfService {
        
        public ClientWcfServiceClient() {
        }
        
        public ClientWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ConfirmRtuConnectionChecked(WcfIntermediary.ClientWcfServiceReference.RtuConnectionCheckedDto dto) {
            base.Channel.ConfirmRtuConnectionChecked(dto);
        }
        
        public System.Threading.Tasks.Task ConfirmRtuConnectionCheckedAsync(WcfIntermediary.ClientWcfServiceReference.RtuConnectionCheckedDto dto) {
            return base.Channel.ConfirmRtuConnectionCheckedAsync(dto);
        }
        
        public void ConfirmRtuInitialized(WcfIntermediary.ClientWcfServiceReference.RtuInitializedDto rtu) {
            base.Channel.ConfirmRtuInitialized(rtu);
        }
        
        public System.Threading.Tasks.Task ConfirmRtuInitializedAsync(WcfIntermediary.ClientWcfServiceReference.RtuInitializedDto rtu) {
            return base.Channel.ConfirmRtuInitializedAsync(rtu);
        }
        
        public void ConfirmMonitoringStarted(WcfIntermediary.ClientWcfServiceReference.MonitoringStartedDto confirm) {
            base.Channel.ConfirmMonitoringStarted(confirm);
        }
        
        public System.Threading.Tasks.Task ConfirmMonitoringStartedAsync(WcfIntermediary.ClientWcfServiceReference.MonitoringStartedDto confirm) {
            return base.Channel.ConfirmMonitoringStartedAsync(confirm);
        }
        
        public void ConfirmMonitoringStopped(WcfIntermediary.ClientWcfServiceReference.MonitoringStoppedDto confirm) {
            base.Channel.ConfirmMonitoringStopped(confirm);
        }
        
        public System.Threading.Tasks.Task ConfirmMonitoringStoppedAsync(WcfIntermediary.ClientWcfServiceReference.MonitoringStoppedDto confirm) {
            return base.Channel.ConfirmMonitoringStoppedAsync(confirm);
        }
        
        public void ConfirmMonitoringSettingsApplied(WcfIntermediary.ClientWcfServiceReference.MonitoringSettingsAppliedDto confirm) {
            base.Channel.ConfirmMonitoringSettingsApplied(confirm);
        }
        
        public System.Threading.Tasks.Task ConfirmMonitoringSettingsAppliedAsync(WcfIntermediary.ClientWcfServiceReference.MonitoringSettingsAppliedDto confirm) {
            return base.Channel.ConfirmMonitoringSettingsAppliedAsync(confirm);
        }
        
        public void ConfirmBaseRefAssigned(WcfIntermediary.ClientWcfServiceReference.BaseRefAssignedDto confirm) {
            base.Channel.ConfirmBaseRefAssigned(confirm);
        }
        
        public System.Threading.Tasks.Task ConfirmBaseRefAssignedAsync(WcfIntermediary.ClientWcfServiceReference.BaseRefAssignedDto confirm) {
            return base.Channel.ConfirmBaseRefAssignedAsync(confirm);
        }
    }
}
